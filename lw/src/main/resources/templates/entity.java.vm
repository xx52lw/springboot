package ${package.Entity};

#if(${activeRecord})
import com.baomidou.mybatisplus.activerecord.Model;
#end
#foreach($pkg in ${table.importPackages})
import ${pkg};
#end
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import lombok.experimental.Accessors;

/**
 * <p>
 * ${table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${table.convert})
@TableName("${table.name}")
#end
#if(${superEntityClass})
@Builder
@NoArgsConstructor
@AllArgsConstructor
@Accessors(chain = true)
@Data
@ApiModel(value = "${entity}", description = "${table.comment}")
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity} extends Model<${entity}> {
#else
public class ${entity} implements Serializable{
private static final long serialVersionUID=1L;
#end

#foreach($field in ${table.fields})

    #if(${field.keyFlag})
        #set($keyPropertyName=${field.propertyName})
    #end
    #if(${field.convert})
        #if(${field.keyFlag})
        @TableId("${field.name}")
        #else
        @TableField("${field.name}")
        #end
    #end
    @ApiModelProperty(value = "${field.comment}")
    private ${field.propertyType} ${field.propertyName};
#end

#if(${entityColumnConstant})
    #foreach($field in ${table.fields})
    public static final String ${field.name.toUpperCase()} ="${field.name}";
    #end
#end
#if(${activeRecord})
protected Serializable pkVal(){
    #if(${keyPropertyName})
            return this.${keyPropertyName};
    #else
            return this.id;
    #end
        }

#end

}